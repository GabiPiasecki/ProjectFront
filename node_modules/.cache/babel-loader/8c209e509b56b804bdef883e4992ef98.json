{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Java Course\\\\React\\\\final\\\\src\\\\Components\\\\MainArea\\\\AdminPages\\\\AddCompany\\\\AddCompany.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./AddCompany.css\";\nimport { useForm } from \"react-hook-form\";\nimport notify from \"../../../../Services/Notify\";\nimport { useHistory } from \"react-router-dom\";\nimport store from \"../../../../Redux/Store\";\nimport { companyAddAction } from \"../../../../Redux/CompanyState\";\nimport jwtAxios from \"../../../../Authorization/jwtAxios\";\nimport { Button } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCompany() {\n  _s();\n\n  var _errors$name, _errors$email, _errors$password;\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const history = useHistory();\n\n  async function send(company) {\n    try {\n      const response = await jwtAxios.post(\"http://localhost:8080/administrator/company/add\", company);\n      console.log(response);\n      store.dispatch(companyAddAction(company));\n      notify.success(\"New company was added successfully!\");\n      history.push(\"/administrator/allCompanies\");\n    } catch {\n      notify.error(\"There was a problem with adding this company\");\n    }\n  }\n\n  const ref = {\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AddCompany Form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add New Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(send),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Company Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Company Name\",\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing company name!\"\n          },\n          minLength: {\n            value: 2,\n            message: \"Minimum name length is two characters!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 23\n        }, this), (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Company Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 45\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"compny@company.com\",\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing company email!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 23\n        }, this), (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Company password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"********\",\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing company password!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 23\n        }, this), (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        width: \"200px\",\n        color: \"info\",\n        className: \"button\",\n        children: \"Add Company\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AddCompany, \"hnDpowF7uVQLHAQtVXOqyKr9Gug=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = AddCompany;\nexport default AddCompany;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCompany\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Java Course/React/final/src/Components/MainArea/AdminPages/AddCompany/AddCompany.tsx"],"names":["useForm","notify","useHistory","store","companyAddAction","jwtAxios","Button","AddCompany","register","handleSubmit","errors","history","send","company","response","post","console","log","dispatch","success","push","error","ref","required","value","message","minLength","name","email","password"],"mappings":"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","sourcesContent":["import \"./AddCompany.css\";\nimport Company from \"../../../../Models/Company\";\nimport { useForm } from \"react-hook-form\";\nimport notify from \"../../../../Services/Notify\";\nimport { useHistory } from \"react-router-dom\";\nimport store from \"../../../../Redux/Store\";\nimport { companyAddAction } from \"../../../../Redux/CompanyState\";\nimport jwtAxios from \"../../../../Authorization/jwtAxios\";\nimport { Button } from \"reactstrap\";\n\nfunction AddCompany(): JSX.Element {\n    const {register, handleSubmit, errors} = useForm<Company>();\n    const history = useHistory();\n\n    async function send(company:Company){\n        try{\n            const response = await jwtAxios.post<Company>(\"http://localhost:8080/administrator/company/add\",company);\n            console.log(response);\n            store.dispatch(companyAddAction(company));\n            notify.success(\"New company was added successfully!\");\n            history.push(\"/administrator/allCompanies\");\n        } catch {\n            notify.error(\"There was a problem with adding this company\");\n        }\n    }\n    \n    const ref={register}\n    return (\n        <div className=\"AddCompany Form\">\n\t\t\t<h2>Add New Company</h2>\n            <form onSubmit={handleSubmit(send)}>\n                <label>Company Name</label><br/>\n                <input type=\"text\" name=\"name\" placeholder=\"Company Name\" ref={register({\n                    required: {value:true , message:\"Missing company name!\"},\n                    minLength: {value:2 , message:\"Minimum name length is two characters!\"}\n                })}/>\n                <span><br/>{errors.name?.message}</span>\n                <br/>\n                <label>Company Email</label><br/>\n                <input type=\"email\" name=\"email\" placeholder=\"compny@company.com\" ref={register({\n                    required: {value:true , message:\"Missing company email!\"}\n                })}/>\n                <span><br/>{errors.email?.message}</span>\n                <br/>\n                <label>Company password</label><br/>\n                <input type=\"password\" name=\"password\" placeholder=\"********\" ref={register({\n                     required: {value:true , message:\"Missing company password!\"}\n                    })}/>\n                <span><br/>{errors.password?.message}</span>\n                <br/>\n                <Button width=\"200px\" color=\"info\" className=\"button\">Add Company</Button>{' '}\n            </form>\n        </div>\n    );\n}\n\nexport default AddCompany;\n"]},"metadata":{},"sourceType":"module"}