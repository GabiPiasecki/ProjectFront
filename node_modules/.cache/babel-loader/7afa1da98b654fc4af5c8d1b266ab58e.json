{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Java Course\\\\React\\\\final\\\\src\\\\Components\\\\MainArea\\\\CompanyPages\\\\UpdateCoupon\\\\UpdateCoupon.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./UpdateCoupon.css\";\nimport { useEffect, useState } from 'react';\nimport notify from \"../../../../Services/Notify\";\nimport store from \"../../../../Redux/Store\";\nimport { couponUpdateAction } from \"../../../../Redux/CouponState\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport jwtAxios from \"../../../../Authorization/jwtAxios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UpdateCoupon(props) {\n  _s();\n\n  var _errors$description, _errors$startDate, _errors$endDate, _errors$amount, _errors$price;\n\n  const couponId = parseInt(props.id);\n  const companyEmail = store.getState().authState.user.email;\n  const loggedCompanyArray = store.getState().companyState.companies.filter(function (item) {\n    return item.email === companyEmail;\n  });\n  const loggedCompany = loggedCompanyArray[0];\n  const companyCoupons = loggedCompany.coupons;\n  const updateCouponArray = companyCoupons.filter(function (item) {\n    return item.id === couponId;\n  });\n  const updateCoupon = updateCouponArray[0];\n  const [updatedTitle, setUpdatedTitle] = useState(updateCoupon.title);\n  const [updatedDescription, setUpdatedDescription] = useState(updateCoupon.description);\n  const [updatedCategory, setUpdatedCategory] = useState(updateCoupon.category);\n  const [updatedStartDate, setUpdatedStartDate] = useState(updateCoupon.startDate);\n  const [updatedEndDate, setUpdatedEndDate] = useState(updateCoupon.endDate);\n  const [updatedAmount, setUpdatedAmount] = useState(updateCoupon.amount);\n  const [updatedPrice, setUpdatedPrice] = useState(updateCoupon.price);\n  const [updatedImage, setUpdatedImage] = useState(updateCoupon.image);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const history = useHistory();\n\n  async function send(coupon) {\n    coupon.id = couponId;\n    coupon.companyID = updateCoupon.companyID;\n    coupon.title = updatedTitle;\n    coupon.description = updatedDescription;\n    coupon.category = updatedCategory;\n    coupon.startDate = updatedStartDate;\n    coupon.endDate = updatedEndDate;\n    coupon.amount = updatedAmount;\n    coupon.price = updatedPrice;\n    coupon.image = updatedImage;\n\n    try {\n      await jwtAxios.put(\"http://localhost:8080/company/update\", coupon);\n      store.dispatch(couponUpdateAction(coupon));\n      notify.success(\"Coupon update successfully!\");\n      history.push(\"/company/all\");\n    } catch {\n      notify.error(\"There was a problem with updating this coupon\");\n    }\n  }\n\n  useEffect(() => {}, []);\n  const ref = {\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"UpdateCoupon\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Coupon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(send),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Choose a coupon category: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"category\",\n        defaultValue: updateCoupon.category,\n        onChange: item => setUpdatedCategory(item.target.value),\n        ref: register,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"--Please choose a category--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"VACATION\",\n          children: \"Vacation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"FOOD\",\n          children: \"Food\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"BEAUTY\",\n          children: \"Beauty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"HOME\",\n          children: \"Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ELECTRICITY\",\n          children: \"Electricity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"FASHION\",\n          children: \"Fashion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"SPORT\",\n          children: \"Sport\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"PETS\",\n          children: \"Pets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"id\",\n        value: parseInt(props.id),\n        ref: register({}),\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        defaultValue: updateCoupon.title,\n        onChange: item => setUpdatedTitle(item.target.value),\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing company title!\"\n          },\n          minLength: {\n            value: 2,\n            message: \"Minimum title length is two characters!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"description\",\n        defaultValue: updateCoupon.description,\n        onChange: item => setUpdatedDescription(item.target.value),\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing coupon description!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 22\n        }, this), (_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"startDate\",\n        defaultValue: updateCoupon.startDate,\n        onChange: item => setUpdatedStartDate(item.target.value),\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing coupon start date!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 22\n        }, this), (_errors$startDate = errors.startDate) === null || _errors$startDate === void 0 ? void 0 : _errors$startDate.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"endDate\",\n        defaultValue: updateCoupon.endDate,\n        onChange: item => setUpdatedEndDate(item.target.value),\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing coupon end date\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 22\n        }, this), (_errors$endDate = errors.endDate) === null || _errors$endDate === void 0 ? void 0 : _errors$endDate.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"amount\",\n        defaultValue: updateCoupon.amount,\n        onChange: item => setUpdatedAmount(parseInt(item.target.value)),\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing coupon amount\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 22\n        }, this), (_errors$amount = errors.amount) === null || _errors$amount === void 0 ? void 0 : _errors$amount.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"price\",\n        defaultValue: updateCoupon.price,\n        onChange: item => setUpdatedPrice(parseInt(item.target.value)),\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing coupon price!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 22\n        }, this), (_errors$price = errors.price) === null || _errors$price === void 0 ? void 0 : _errors$price.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"image\",\n        defaultValue: updateCoupon.image,\n        onChange: item => setUpdatedImage(item.target.value),\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing coupon image!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 8\n  }, this);\n}\n\n_s(UpdateCoupon, \"D4kwwdW1kSeCifyHsKJj68ecmvE=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = UpdateCoupon;\nexport default UpdateCoupon;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateCoupon\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Java Course/React/final/src/Components/MainArea/CompanyPages/UpdateCoupon/UpdateCoupon.tsx"],"names":["useEffect","useState","notify","store","couponUpdateAction","useForm","useHistory","jwtAxios","UpdateCoupon","props","couponId","parseInt","id","companyEmail","getState","authState","user","email","loggedCompanyArray","companyState","companies","filter","item","loggedCompany","companyCoupons","coupons","updateCouponArray","updateCoupon","updatedTitle","setUpdatedTitle","title","updatedDescription","setUpdatedDescription","description","updatedCategory","setUpdatedCategory","category","updatedStartDate","setUpdatedStartDate","startDate","updatedEndDate","setUpdatedEndDate","endDate","updatedAmount","setUpdatedAmount","amount","updatedPrice","setUpdatedPrice","price","updatedImage","setUpdatedImage","image","register","handleSubmit","errors","history","send","coupon","companyID","put","dispatch","success","push","error","ref","target","value","required","message","minLength"],"mappings":"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","sourcesContent":["import Coupon from \"../../../../Models/Coupon\";\nimport \"./UpdateCoupon.css\";\nimport { useEffect, useState} from 'react';\nimport notify from \"../../../../Services/Notify\";\nimport store from \"../../../../Redux/Store\";\nimport { couponUpdateAction } from \"../../../../Redux/CouponState\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport jwtAxios from \"../../../../Authorization/jwtAxios\";\n\ninterface UpdateCouponProps {\n  id:string;\n}\n\nfunction UpdateCoupon(props: UpdateCouponProps): JSX.Element {\n    const couponId = parseInt(props.id);\n    const companyEmail = store.getState().authState.user.email;\n    const loggedCompanyArray = store.getState().companyState.companies.filter(function(item){return item.email === companyEmail});\n    const loggedCompany = loggedCompanyArray[0];\n    const companyCoupons = loggedCompany.coupons;\n    const updateCouponArray = companyCoupons.filter(function (item){return item.id === couponId});\n    const updateCoupon = updateCouponArray[0];\n\n    const [updatedTitle, setUpdatedTitle] = useState<string>(updateCoupon.title);\n    const [updatedDescription, setUpdatedDescription] = useState<string>(updateCoupon.description);\n    const [updatedCategory, setUpdatedCategory] = useState<string>(updateCoupon.category);\n    const [updatedStartDate, setUpdatedStartDate] = useState<string>(updateCoupon.startDate);\n    const [updatedEndDate, setUpdatedEndDate] = useState<string>(updateCoupon.endDate);\n    const [updatedAmount, setUpdatedAmount] = useState<number>(updateCoupon.amount);\n    const [updatedPrice, setUpdatedPrice] = useState<number>(updateCoupon.price);\n    const [updatedImage, setUpdatedImage] = useState<string>(updateCoupon.image);\n\n    const {register, handleSubmit, errors} = useForm<Coupon>();\n    const history = useHistory();\n    async function send(coupon:Coupon){\n       coupon.id = couponId;\n       coupon.companyID=updateCoupon.companyID;\n       coupon.title=updatedTitle;\n       coupon.description = updatedDescription;\n       coupon.category=updatedCategory;\n       coupon.startDate=updatedStartDate;\n       coupon.endDate=updatedEndDate;\n       coupon.amount = updatedAmount;\n       coupon.price=updatedPrice;\n       coupon.image=updatedImage;\n       \n       try{  \n           await jwtAxios.put<Coupon>(\"http://localhost:8080/company/update\", coupon);\n           store.dispatch(couponUpdateAction(coupon));\n           notify.success(\"Coupon update successfully!\");\n           history.push(\"/company/all\");\n       } catch {\n           notify.error(\"There was a problem with updating this coupon\");\n       }\n   }\n\n   useEffect(()=>{ \n   }, [])\n   \n   const ref={register}\n   return (\n       <div className=\"UpdateCoupon\">\n     <h2>Update Coupon</h2>\n           <form onSubmit={handleSubmit(send)}>\n\n           <label>Choose a coupon category: </label>\n                <select name=\"category\" defaultValue ={updateCoupon.category} onChange ={item => setUpdatedCategory(item.target.value)}   ref={register}>\n                    <option value=\"\" disabled>--Please choose a category--</option>\n                    <option value=\"VACATION\">Vacation</option>\n                    <option value=\"FOOD\" >Food</option>\n                    <option value=\"BEAUTY\">Beauty</option>\n                    <option value=\"HOME\">Home</option>\n                    <option value=\"ELECTRICITY\">Electricity</option>\n                    <option value=\"FASHION\">Fashion</option>\n                    <option value=\"SPORT\">Sport</option>\n                    <option value=\"PETS\">Pets</option>\n                </select>\n                <br/><br/>\n\n\n               <input type=\"text\" name=\"id\" value={parseInt(props.id)} ref={register({\n               })} disabled/>\n               <br/><br/>\n               <input type=\"text\" name=\"title\" defaultValue={updateCoupon.title} onChange = {item => setUpdatedTitle(item.target.value)} ref={register({\n                required: {value:true , message:\"Missing company title!\"},\n                minLength: {value:2 , message:\"Minimum title length is two characters!\"}\n               })}/>\n               <br/><br/>\n               <input type=\"text\" name=\"description\" defaultValue={updateCoupon.description} onChange = {item => setUpdatedDescription(item.target.value)} ref={register({              \n                  required: {value:true , message:\"Missing coupon description!\"}\n               })}/>\n               <span><br/>{errors.description?.message}</span>\n               <br/><br/>\n\n               <input type=\"text\" name=\"startDate\" defaultValue={updateCoupon.startDate} onChange = {item => setUpdatedStartDate(item.target.value)} ref={register({              \n                  required: {value:true , message:\"Missing coupon start date!\"}\n               })}/>\n               <span><br/>{errors.startDate?.message}</span>\n               <br/><br/>\n               <input type=\"text\" name=\"endDate\" defaultValue={updateCoupon.endDate} onChange = {item => setUpdatedEndDate(item.target.value)} ref={register({              \n                  required: {value:true , message:\"Missing coupon end date\"}\n               })}/>\n               <span><br/>{errors.endDate?.message}</span>\n               <br/><br/>\n               <input type=\"number\" name=\"amount\" defaultValue={updateCoupon.amount} onChange = {item =>  setUpdatedAmount(parseInt(item.target.value))} ref={register({              \n                  required: {value:true , message:\"Missing coupon amount\"}\n               })}/>\n               <span><br/>{errors.amount?.message}</span>\n               <br/><br/>\n               <input type=\"number\" name=\"price\" defaultValue={updateCoupon.price} onChange = {item => setUpdatedPrice(parseInt(item.target.value))} ref={register({            \n                    required: {value:true , message:\"Missing coupon price!\"}\n               })}/>\n               <span><br/>{errors.price?.message}</span>\n               <br/><br/>\n               <input type=\"text\" name=\"image\" defaultValue={updateCoupon.image} onChange = {item => setUpdatedImage(item.target.value)} ref={register({            \n                    required: {value:true , message:\"Missing coupon image!\"}\n               })}/>\n               <button>Update</button>\n           </form>\n       </div>\n   );\n}\n\nexport default UpdateCoupon;\n\n"]},"metadata":{},"sourceType":"module"}