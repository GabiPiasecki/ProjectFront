{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Java Course\\\\React\\\\final\\\\src\\\\Components\\\\MainArea\\\\CompanyPages\\\\CompanyMaxPrice\\\\CompanyMaxPrice.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport jwtAxios from \"../../../../Authorization/jwtAxios\";\nimport CouponForCompany from \"../../../../ModelTemplates/CouponForCompany/CouponForCompany\";\nimport { companyUpdateAction } from \"../../../../Redux/CompanyState\";\nimport store from \"../../../../Redux/Store\";\nimport \"./CompanyMaxPrice.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CompanyMaxPrice() {\n  _s();\n\n  const [coupons, setCoupons] = useState([]);\n\n  const fetchCoupons = async () => {\n    try {\n      const {\n        data: coupons\n      } = await jwtAxios.get(`/company/all`);\n      const companyEmail = store.getState().authState.user.email;\n      const loggedCompanyArray = store.getState().companyState.companies.filter(function (item) {\n        return item.email === companyEmail;\n      });\n      const loggedCompany = loggedCompanyArray[0];\n      loggedCompany.coupons = coupons;\n      store.dispatch(companyUpdateAction(loggedCompany));\n      setCoupons(coupons);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const [maxVal, setMaxVal] = useState(0);\n\n  const setValue = args => {\n    const value = args.target.value;\n    setMaxVal(parseInt(value));\n  };\n\n  const priceCoupons = coupons.filter(function (item) {\n    return item.price <= maxVal;\n  });\n  useEffect(() => {\n    fetchCoupons();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CompanyMaxPrice\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Choose Max Price:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"2000\",\n      onChange: setValue,\n      className: \"slider\",\n      style: {\n        width: \"20%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"slider__right-value\",\n      children: maxVal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 62\n    }, this), priceCoupons.map(item => /*#__PURE__*/_jsxDEV(CouponForCompany, {\n      coupon: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 39\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CompanyMaxPrice, \"LWHT4ycfrTxvE6gymSGPqhjh3HE=\");\n\n_c = CompanyMaxPrice;\nexport default CompanyMaxPrice;\n\nvar _c;\n\n$RefreshReg$(_c, \"CompanyMaxPrice\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Java Course/React/final/src/Components/MainArea/CompanyPages/CompanyMaxPrice/CompanyMaxPrice.tsx"],"names":["useEffect","useState","jwtAxios","CouponForCompany","companyUpdateAction","store","CompanyMaxPrice","coupons","setCoupons","fetchCoupons","data","get","companyEmail","getState","authState","user","email","loggedCompanyArray","companyState","companies","filter","item","loggedCompany","dispatch","e","console","log","maxVal","setMaxVal","setValue","args","value","target","parseInt","priceCoupons","price","width","map","id"],"mappings":";;;AAAA,SAAyBA,SAAzB,EAAoCC,QAApC,QAAoD,OAApD;AACA,OAAOC,QAAP,MAAqB,oCAArB;AAEA,OAAOC,gBAAP,MAA6B,8DAA7B;AACA,SAASC,mBAAT,QAAoC,gCAApC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAO,uBAAP;;;AAEA,SAASC,eAAT,GAAwC;AAAA;;AACpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAW,EAAX,CAAtC;;AACA,QAAMQ,YAAY,GAAG,YAAY;AAC7B,QAAI;AACA,YAAM;AAAEC,QAAAA,IAAI,EAAGH;AAAT,UAA2C,MAAML,QAAQ,CAACS,GAAT,CAAc,cAAd,CAAvD;AACA,YAAMC,YAAY,GAAGP,KAAK,CAACQ,QAAN,GAAiBC,SAAjB,CAA2BC,IAA3B,CAAgCC,KAArD;AACA,YAAMC,kBAAkB,GAAGZ,KAAK,CAACQ,QAAN,GAAiBK,YAAjB,CAA8BC,SAA9B,CAAwCC,MAAxC,CAA+C,UAASC,IAAT,EAAc;AAAC,eAAOA,IAAI,CAACL,KAAL,KAAeJ,YAAtB;AAAmC,OAAjG,CAA3B;AACA,YAAMU,aAAa,GAAGL,kBAAkB,CAAC,CAAD,CAAxC;AACAK,MAAAA,aAAa,CAACf,OAAd,GAAwBA,OAAxB;AACAF,MAAAA,KAAK,CAACkB,QAAN,CAAenB,mBAAmB,CAACkB,aAAD,CAAlC;AACAd,MAAAA,UAAU,CAACD,OAAD,CAAV;AACH,KARD,CAQE,OAAMiB,CAAN,EAAS;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AACJ,GAZD;;AAaA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsB3B,QAAQ,CAAC,CAAD,CAApC;;AACA,QAAM4B,QAAQ,GAAIC,IAAD,IAA0B;AACvC,UAAMC,KAAK,GAAID,IAAI,CAACE,MAAN,CAAkCD,KAAhD;AACAH,IAAAA,SAAS,CAACK,QAAQ,CAACF,KAAD,CAAT,CAAT;AACH,GAHD;;AAIA,QAAMG,YAAY,GAAG3B,OAAO,CAACa,MAAR,CAAe,UAASC,IAAT,EAAe;AAAC,WAAOA,IAAI,CAACc,KAAL,IAAcR,MAArB;AAA4B,GAA3D,CAArB;AAEA3B,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,YAAY;AACf,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEL;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,GAAG,EAAC,GAAxB;AAA4B,MAAA,GAAG,EAAC,MAAhC;AAAuC,MAAA,QAAQ,EAAEoB,QAAjD;AAA2D,MAAA,SAAS,EAAC,QAArE;AAA8E,MAAA,KAAK,EAAE;AAACO,QAAAA,KAAK,EAAE;AAAR;AAArF;AAAA;AAAA;AAAA;AAAA,YAFK,eAGI;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA,gBAAqCT;AAArC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAGqD;AAAA;AAAA;AAAA;AAAA,YAHrD,EAKKO,YAAY,CAACG,GAAb,CAAiBhB,IAAI,iBAAI,QAAC,gBAAD;AAAgC,MAAA,MAAM,EAAEA;AAAxC,OAAuBA,IAAI,CAACiB,EAA5B;AAAA;AAAA;AAAA;AAAA,YAAzB,CALL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GApCQhC,e;;KAAAA,e;AAsCT,eAAeA,eAAf","sourcesContent":["import { SyntheticEvent, useEffect, useState } from \"react\";\nimport jwtAxios from \"../../../../Authorization/jwtAxios\";\nimport Coupon from \"../../../../Models/Coupon\";\nimport CouponForCompany from \"../../../../ModelTemplates/CouponForCompany/CouponForCompany\";\nimport { companyUpdateAction } from \"../../../../Redux/CompanyState\";\nimport store from \"../../../../Redux/Store\";\nimport \"./CompanyMaxPrice.css\";\n\nfunction CompanyMaxPrice(): JSX.Element {\n    const [coupons, setCoupons] = useState<Coupon[]>([]);\n    const fetchCoupons = async () => {\n        try {\n            const { data : coupons } : { data : Coupon[] } = await jwtAxios.get(`/company/all`);\n            const companyEmail = store.getState().authState.user.email;\n            const loggedCompanyArray = store.getState().companyState.companies.filter(function(item){return item.email === companyEmail});\n            const loggedCompany = loggedCompanyArray[0];\n            loggedCompany.coupons = coupons;\n            store.dispatch(companyUpdateAction(loggedCompany));\n            setCoupons(coupons);\n        } catch(e) {\n            console.log(e)\n        }\n    }\n    const [maxVal, setMaxVal] = useState(0);\n    const setValue = (args: SyntheticEvent) => {\n        const value = (args.target as HTMLInputElement).value;\n        setMaxVal(parseInt(value));\n    }\n    const priceCoupons = coupons.filter(function(item) {return item.price <= maxVal});\n    \n    useEffect(() => {\n        fetchCoupons();\n    }, []);\n\n    return (\n        <div className=\"CompanyMaxPrice\">\n            <h2>Choose Max Price:</h2>\n\t\t\t<input type=\"range\" min=\"0\" max=\"2000\" onChange={setValue} className=\"slider\" style={{width: \"20%\"}}/>\n            <h2 className=\"slider__right-value\">{maxVal}</h2><br/>\n\n            {priceCoupons.map(item => <CouponForCompany key={item.id} coupon={item}/>)}\n        </div>\n        \n    );\n}\n\nexport default CompanyMaxPrice;\n"]},"metadata":{},"sourceType":"module"}