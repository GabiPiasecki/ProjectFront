{"ast":null,"code":"export class AuthState {\n  constructor() {\n    this.user = null;\n    this.isLogged = false;\n  }\n\n}\nexport let AuthActionType;\n\n(function (AuthActionType) {\n  AuthActionType[\"Register\"] = \"Register\";\n  AuthActionType[\"Login\"] = \"Login\";\n  AuthActionType[\"Logout\"] = \"Logout\";\n})(AuthActionType || (AuthActionType = {}));\n\nexport function loginAction(user) {\n  return {\n    type: AuthActionType.Login,\n    payload: user\n  };\n}\nexport function logoutAction() {\n  return {\n    type: AuthActionType.Logout\n  };\n}\nexport function authReducer(currentState = new AuthState(), action) {\n  const newState = { ...currentState\n  };\n\n  switch (action.type) {\n    case AuthActionType.Login:\n      localStorage.removeItem(\"user\");\n      newState.user = action.payload;\n      localStorage.setItem(\"user\", JSON.stringify(newState.user));\n      newState.isLogged = true;\n      break;\n\n    case AuthActionType.Logout:\n      newState.user = null;\n      localStorage.removeItem(\"user\");\n      newState.isLogged = false;\n      break;\n  }\n\n  return newState;\n}","map":{"version":3,"sources":["C:/Users/user/Desktop/Java Course/React/final/src/Redux/AuthState.ts"],"names":["AuthState","user","isLogged","AuthActionType","loginAction","type","Login","payload","logoutAction","Logout","authReducer","currentState","action","newState","localStorage","removeItem","setItem","JSON","stringify"],"mappings":"AAEA,OAAO,MAAMA,SAAN,CAAe;AAAA;AAAA,SACXC,IADW,GACM,IADN;AAAA,SAEXC,QAFW,GAEQ,KAFR;AAAA;;AAAA;AAKtB,WAAYC,cAAZ;;WAAYA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c;;AAWZ,OAAO,SAASC,WAAT,CAAqBH,IAArB,EAA+C;AAClD,SAAO;AAACI,IAAAA,IAAI,EAACF,cAAc,CAACG,KAArB;AAA4BC,IAAAA,OAAO,EAACN;AAApC,GAAP;AACH;AACD,OAAO,SAASO,YAAT,GAAkC;AACrC,SAAO;AAACH,IAAAA,IAAI,EAAEF,cAAc,CAACM;AAAtB,GAAP;AACH;AAED,OAAO,SAASC,WAAT,CAAqBC,YAAuB,GAAG,IAAIX,SAAJ,EAA/C,EAAgEY,MAAhE,EAA6F;AAChG,QAAMC,QAAQ,GAAG,EAAC,GAAGF;AAAJ,GAAjB;;AACA,UAAOC,MAAM,CAACP,IAAd;AACI,SAAKF,cAAc,CAACG,KAApB;AACIQ,MAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACAF,MAAAA,QAAQ,CAACZ,IAAT,GAAgBW,MAAM,CAACL,OAAvB;AACAO,MAAAA,YAAY,CAACE,OAAb,CAAqB,MAArB,EAA4BC,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACZ,IAAxB,CAA5B;AACAY,MAAAA,QAAQ,CAACX,QAAT,GAAoB,IAApB;AACA;;AACJ,SAAKC,cAAc,CAACM,MAApB;AACII,MAAAA,QAAQ,CAACZ,IAAT,GAAgB,IAAhB;AACAa,MAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACAF,MAAAA,QAAQ,CAACX,QAAT,GAAoB,KAApB;AACA;AAXR;;AAaA,SAAOW,QAAP;AACH","sourcesContent":["import UserModel from \"../Models/UserModel\";\r\n\r\nexport class AuthState{\r\n    public user:UserModel = null;\r\n    public isLogged:boolean = false;\r\n}\r\n\r\nexport enum AuthActionType{\r\n    Register = \"Register\",\r\n    Login = \"Login\",\r\n    Logout = \"Logout\",\r\n}\r\n\r\nexport interface AuthAction{\r\n    type:AuthActionType,\r\n    payload?: any\r\n}\r\n\r\nexport function loginAction(user:UserModel):AuthAction{\r\n    return {type:AuthActionType.Login, payload:user}\r\n}\r\nexport function logoutAction():AuthAction{\r\n    return {type: AuthActionType.Logout}\r\n}\r\n\r\nexport function authReducer(currentState: AuthState = new AuthState(), action: AuthAction):AuthState{\r\n    const newState = {...currentState};\r\n    switch(action.type){\r\n        case AuthActionType.Login:\r\n            localStorage.removeItem(\"user\");\r\n            newState.user = action.payload;\r\n            localStorage.setItem(\"user\",JSON.stringify(newState.user));\r\n            newState.isLogged = true;\r\n            break;\r\n        case AuthActionType.Logout:\r\n            newState.user = null;\r\n            localStorage.removeItem(\"user\");\r\n            newState.isLogged = false;\r\n            break;\r\n    }\r\n    return newState;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}