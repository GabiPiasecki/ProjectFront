{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Java Course\\\\React\\\\final\\\\src\\\\Components\\\\MainArea\\\\CustomerPages\\\\UpdateCustomer\\\\SelfUpdateCustomer.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./SelfUpdateCustomer.css\";\nimport { useEffect, useState } from 'react';\nimport notify from \"../../../../Services/Notify\";\nimport store from \"../../../../Redux/Store\";\nimport { customerUpdateAction } from \"../../../../Redux/CustomerState\";\nimport { useForm } from \"react-hook-form\";\nimport { useHistory } from \"react-router-dom\";\nimport jwtAxios from \"../../../../Authorization/jwtAxios\";\nimport { Button } from \"reactstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SelfUpdateCustomer(props) {\n  _s();\n\n  var _errors$email, _errors$password;\n\n  const customerEmail = store.getState().authState.user.email;\n  const updateCustomerArray = store.getState().customerState.customers.filter(function (item) {\n    return item.email === customerEmail;\n  });\n  const updateCustomer = updateCustomerArray[0];\n  const [updatedEmail, setUpdatedEmail] = useState(updateCustomer.email);\n  const [updatedPassword, setUpdatedPassword] = useState(updateCustomer.password);\n  const [updatedFirstName, setUpdatedFirstName] = useState(updateCustomer.firstName);\n  const [updatedLastName, setUpdatedLastName] = useState(updateCustomer.lastName);\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const history = useHistory();\n\n  async function send(customer) {\n    customer.id = updateCustomer.id;\n    customer.firstName = updatedFirstName;\n    customer.lastName = updatedLastName;\n    customer.email = updatedEmail;\n    customer.password = updatedPassword;\n    customer.coupons = updateCustomer.coupons;\n\n    try {\n      await jwtAxios.put(\"http://localhost:8080/administrator/customer/update\", customer);\n      store.dispatch(customerUpdateAction(customer));\n      notify.success(\"Customer update successfully!\");\n      history.push(\"/customer/details\");\n    } catch {\n      notify.error(\"There was a problem with updating the details!\");\n    }\n  }\n\n  useEffect(() => {}, []);\n  const ref = {\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SelfUpdateCustomer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(send),\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 48\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Customer id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"id\",\n        value: updateCustomer.id,\n        ref: register({}),\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 41\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        defaultValue: updateCustomer.firstName,\n        onChange: e => setUpdatedFirstName(e.target.value),\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing customer first name!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 22\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        defaultValue: updateCustomer.lastName,\n        onChange: e => setUpdatedLastName(e.target.value),\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing customer last name!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"Email@email.com\",\n        defaultValue: updateCustomer.email,\n        onChange: e => setUpdatedEmail(e.target.value),\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing customer email!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 22\n        }, this), (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"*******\",\n        defaultValue: updateCustomer.password,\n        onChange: e => setUpdatedPassword(e.target.value),\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing customer password!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 22\n        }, this), (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"md\",\n        color: \"info\",\n        className: \"button\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 8\n  }, this);\n}\n\n_s(SelfUpdateCustomer, \"JIbOgFhn/Bu7j3zS6wVSH66LQhs=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = SelfUpdateCustomer;\nexport default SelfUpdateCustomer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelfUpdateCustomer\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Java Course/React/final/src/Components/MainArea/CustomerPages/UpdateCustomer/SelfUpdateCustomer.tsx"],"names":["useEffect","useState","notify","store","customerUpdateAction","useForm","useHistory","jwtAxios","Button","SelfUpdateCustomer","props","customerEmail","getState","authState","user","email","updateCustomerArray","customerState","customers","filter","item","updateCustomer","updatedEmail","setUpdatedEmail","updatedPassword","setUpdatedPassword","password","updatedFirstName","setUpdatedFirstName","firstName","updatedLastName","setUpdatedLastName","lastName","register","handleSubmit","errors","history","send","customer","id","coupons","put","dispatch","success","push","error","ref","e","target","value","required","message"],"mappings":"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","sourcesContent":["import Customer from \"../../../../Models/Customer\";\r\nimport \"./SelfUpdateCustomer.css\";\r\nimport { useEffect, useState} from 'react';\r\nimport notify from \"../../../../Services/Notify\";\r\nimport store from \"../../../../Redux/Store\";\r\nimport { customerUpdateAction } from \"../../../../Redux/CustomerState\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport jwtAxios from \"../../../../Authorization/jwtAxios\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nfunction SelfUpdateCustomer(props: {}): JSX.Element {\r\n    const customerEmail=store.getState().authState.user.email;\r\n    const updateCustomerArray = store.getState().customerState.customers.filter(function (item){return item.email === customerEmail});\r\n    const updateCustomer = updateCustomerArray[0];\r\n\r\n    const [updatedEmail, setUpdatedEmail] = useState<string>(updateCustomer.email);\r\n    const [updatedPassword, setUpdatedPassword] = useState<string>(updateCustomer.password);\r\n    const [updatedFirstName, setUpdatedFirstName] = useState<string>(updateCustomer.firstName);\r\n    const [updatedLastName, setUpdatedLastName] = useState<string>(updateCustomer.lastName);   \r\n    \r\n    const {register, handleSubmit, errors} = useForm<Customer>();\r\n    const history = useHistory();\r\n    async function send(customer:Customer){\r\n       customer.id = updateCustomer.id;\r\n       customer.firstName=updatedFirstName;\r\n       customer.lastName=updatedLastName;\r\n       customer.email=updatedEmail;\r\n       customer.password=updatedPassword;\r\n       customer.coupons=updateCustomer.coupons;\r\n       try{  \r\n           await jwtAxios.put<Customer>(\"http://localhost:8080/administrator/customer/update\",customer);\r\n           store.dispatch(customerUpdateAction(customer));\r\n           notify.success(\"Customer update successfully!\");\r\n           history.push(\"/customer/details\");\r\n       } catch {\r\n           notify.error(\"There was a problem with updating the details!\");\r\n       }\r\n   }\r\n\r\n   useEffect(()=>{ \r\n   }, [])\r\n   \r\n   const ref={register}\r\n   return (\r\n       <div className=\"SelfUpdateCustomer\">\r\n     <h2>Update Customer</h2>\r\n           <form onSubmit={handleSubmit(send)}><br/>\r\n                <label>Customer id</label><br/>\r\n               <input type=\"text\" name=\"id\" value={updateCustomer.id} ref={register({\r\n               })} disabled/>\r\n               <br/><br/>\r\n               <label>First Name</label><br/>\r\n               <input type=\"text\" name=\"firstName\" defaultValue={updateCustomer.firstName} onChange={e => setUpdatedFirstName(e.target.value)} ref={register({\r\n                required: {value:true , message:\"Missing customer first name!\"}\r\n               })} /><br/><br/>\r\n               <label>Last Name</label><br/>\r\n               <input type=\"text\" name=\"lastName\" defaultValue={updateCustomer.lastName} onChange={e => setUpdatedLastName(e.target.value)} ref={register({\r\n                required: {value:true , message:\"Missing customer last name!\"}\r\n               })} />\r\n               <br/><br/>\r\n               <label>Email</label><br/>\r\n               <input type=\"email\" name=\"Email@email.com\" defaultValue={updateCustomer.email} onChange={e =>setUpdatedEmail(e.target.value)} ref={register({\r\n               required: {value:true , message:\"Missing customer email!\"}\r\n               })}/>\r\n               <span><br/>{errors.email?.message}</span>\r\n               <br/>\r\n               <label>password</label><br/>\r\n               <input type=\"password\" name=\"*******\" defaultValue={updateCustomer.password} onChange={e =>setUpdatedPassword(e.target.value)} ref={register({\r\n               required: {value:true , message:\"Missing customer password!\"}\r\n               })}/>\r\n               <span><br/>{errors.password?.message}</span>\r\n               <br/>\r\n               <Button size=\"md\" color=\"info\" className=\"button\">Update</Button>\r\n           </form>\r\n       </div>\r\n   );\r\n}\r\n\r\nexport default SelfUpdateCustomer;\r\n"]},"metadata":{},"sourceType":"module"}