{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Java Course\\\\React\\\\final\\\\src\\\\Components\\\\MainArea\\\\GuestPages\\\\Register\\\\Register.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./Register.css\";\nimport { useForm } from \"react-hook-form\";\nimport notify from \"../../../../Services/Notify\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport store from \"../../../../Redux/Store\";\nimport { customerAddAction } from \"../../../../Redux/CustomerState\";\nimport { Button } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Register() {\n  _s();\n\n  var _errors$firstName, _errors$lastName, _errors$email, _errors$password;\n\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const history = useHistory();\n\n  async function send(customer) {\n    try {\n      const response = await axios.post(\"http://localhost:8080/register\", customer); //it was jwtAxios\n\n      notify.success(\"Registration was successful!\");\n      store.dispatch(customerAddAction(customer));\n      history.push(\"/login\");\n    } catch {\n      notify.error(\"There was a problem with registration!\");\n    }\n  }\n\n  const ref = {\n    register\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(send),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"First Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 44\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"firstName\",\n        placeholder: \"John\",\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing first name!\"\n          },\n          minLength: {\n            value: 2,\n            message: \"Minimum first name length is two characters!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 23\n        }, this), (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 62\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Last Name \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"lastName\",\n        placeholder: \"Smith\",\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing last name!\"\n          },\n          minLength: {\n            value: 2,\n            message: \"Minimum last name length is two characters!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 23\n        }, this), (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 61\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"example@example.com\",\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing email!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 23\n        }, this), (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 58\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"********\",\n        ref: register({\n          required: {\n            value: true,\n            message: \"Missing password!\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 23\n        }, this), (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 61\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"info\",\n        className: \"button\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"hnDpowF7uVQLHAQtVXOqyKr9Gug=\", false, function () {\n  return [useForm, useHistory];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Java Course/React/final/src/Components/MainArea/GuestPages/Register/Register.tsx"],"names":["useForm","notify","useHistory","axios","store","customerAddAction","Button","Register","register","handleSubmit","errors","history","send","customer","response","post","success","dispatch","push","error","ref","required","value","message","minLength","firstName","lastName","email","password"],"mappings":";;;AAAA,OAAO,gBAAP;AACA,SAASA,OAAT,QAAwB,iBAAxB;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,SAASC,MAAT,QAAuB,YAAvB;;;AAEA,SAASC,QAAT,GAAiC;AAAA;;AAAA;;AAC7B,QAAM;AAACC,IAAAA,QAAD;AAAWC,IAAAA,YAAX;AAAyBC,IAAAA;AAAzB,MAAmCV,OAAO,EAAhD;AACA,QAAMW,OAAO,GAAGT,UAAU,EAA1B;;AAEA,iBAAeU,IAAf,CAAoBC,QAApB,EAAsC;AAClC,QAAG;AACC,YAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAN,CAAqB,gCAArB,EAAsDF,QAAtD,CAAvB,CADD,CACwF;;AACvFZ,MAAAA,MAAM,CAACe,OAAP,CAAe,8BAAf;AACAZ,MAAAA,KAAK,CAACa,QAAN,CAAeZ,iBAAiB,CAACQ,QAAD,CAAhC;AACAF,MAAAA,OAAO,CAACO,IAAR,CAAa,QAAb;AACH,KALD,CAKE,MAAM;AACJjB,MAAAA,MAAM,CAACkB,KAAP,CAAa,wCAAb;AACH;AACJ;;AAED,QAAMC,GAAG,GAAC;AAACZ,IAAAA;AAAD,GAAV;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eACgB;AAAA;AAAA;AAAA;AAAA,YADhB,eAEI;AAAM,MAAA,QAAQ,EAAEC,YAAY,CAACG,IAAD,CAA5B;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,oBAC+B;AAAA;AAAA;AAAA;AAAA,cAD/B,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,WAAxB;AAAoC,QAAA,WAAW,EAAC,MAAhD;AAAuD,QAAA,GAAG,EAAEJ,QAAQ,CAAC;AACjEa,UAAAA,QAAQ,EAAE;AAACC,YAAAA,KAAK,EAAC,IAAP;AAAcC,YAAAA,OAAO,EAAC;AAAtB,WADuD;AAEjEC,UAAAA,SAAS,EAAE;AAACF,YAAAA,KAAK,EAAC,CAAP;AAAWC,YAAAA,OAAO,EAAC;AAAnB;AAFsD,SAAD;AAApE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAMI;AAAA,gCAAM;AAAA;AAAA;AAAA;AAAA,gBAAN,uBAAYb,MAAM,CAACe,SAAnB,sDAAY,kBAAkBF,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAMiD;AAAA;AAAA;AAAA;AAAA,cANjD,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,oBAO8B;AAAA;AAAA;AAAA;AAAA,cAP9B,eAQI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,UAAxB;AAAmC,QAAA,WAAW,EAAC,OAA/C;AAAuD,QAAA,GAAG,EAAEf,QAAQ,CAAC;AACjEa,UAAAA,QAAQ,EAAE;AAACC,YAAAA,KAAK,EAAC,IAAP;AAAcC,YAAAA,OAAO,EAAC;AAAtB,WADuD;AAEjEC,UAAAA,SAAS,EAAE;AAACF,YAAAA,KAAK,EAAC,CAAP;AAAWC,YAAAA,OAAO,EAAC;AAAnB;AAFsD,SAAD;AAApE;AAAA;AAAA;AAAA;AAAA,cARJ,eAYI;AAAA,gCAAM;AAAA;AAAA;AAAA;AAAA,gBAAN,sBAAYb,MAAM,CAACgB,QAAnB,qDAAY,iBAAiBH,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAZJ,eAYgD;AAAA;AAAA;AAAA;AAAA,cAZhD,eAaI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ,oBAa0B;AAAA;AAAA;AAAA;AAAA,cAb1B,eAcI;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,IAAI,EAAC,OAAzB;AAAiC,QAAA,WAAW,EAAC,qBAA7C;AAAmE,QAAA,GAAG,EAAEf,QAAQ,CAAC;AAC7Ea,UAAAA,QAAQ,EAAE;AAACC,YAAAA,KAAK,EAAC,IAAP;AAAcC,YAAAA,OAAO,EAAC;AAAtB;AADmE,SAAD;AAAhF;AAAA;AAAA;AAAA;AAAA,cAdJ,eAiBI;AAAA,gCAAM;AAAA;AAAA;AAAA;AAAA,gBAAN,mBAAYb,MAAM,CAACiB,KAAnB,kDAAY,cAAcJ,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBJ,eAiB6C;AAAA;AAAA;AAAA;AAAA,cAjB7C,eAkBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAlBJ,oBAkB6B;AAAA;AAAA;AAAA;AAAA,cAlB7B,eAmBI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,IAAI,EAAC,UAA5B;AAAuC,QAAA,WAAW,EAAC,UAAnD;AAA8D,QAAA,GAAG,EAAEf,QAAQ,CAAC;AACvEa,UAAAA,QAAQ,EAAE;AAACC,YAAAA,KAAK,EAAC,IAAP;AAAcC,YAAAA,OAAO,EAAC;AAAtB;AAD6D,SAAD;AAA3E;AAAA;AAAA;AAAA;AAAA,cAnBJ,eAsBI;AAAA,gCAAM;AAAA;AAAA;AAAA;AAAA,gBAAN,sBAAYb,MAAM,CAACkB,QAAnB,qDAAY,iBAAiBL,OAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ,eAsBgD;AAAA;AAAA;AAAA;AAAA,cAtBhD,eAuBI,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,SAAS,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBJ,EAuB8D,GAvB9D;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GA9CQhB,Q;UACoCP,O,EACzBE,U;;;KAFXK,Q;AAgDT,eAAeA,QAAf","sourcesContent":["import \"./Register.css\";\nimport { useForm } from \"react-hook-form\";\nimport notify from \"../../../../Services/Notify\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Customer from \"../../../../Models/Customer\";\nimport store from \"../../../../Redux/Store\";\nimport { customerAddAction } from \"../../../../Redux/CustomerState\";\nimport { Button } from 'reactstrap';\n\nfunction Register(): JSX.Element {\n    const {register, handleSubmit, errors} = useForm<Customer>();\n    const history = useHistory();\n\n    async function send(customer:Customer){\n        try{\n            const response = await axios.post<Customer>(\"http://localhost:8080/register\",customer);//it was jwtAxios\n            notify.success(\"Registration was successful!\");\n            store.dispatch(customerAddAction(customer));\n            history.push(\"/login\");\n        } catch {\n            notify.error(\"There was a problem with registration!\");\n        }\n    }\n    \n    const ref={register}\n    return (\n        <div className=\"Register\">\n\t\t\t<h2>Registration</h2><br/>\n            <form onSubmit={handleSubmit(send)}>\n                <label>First Name </label> <br/>\n                <input type=\"text\" name=\"firstName\" placeholder=\"John\" ref={register({\n                    required: {value:true , message:\"Missing first name!\"},\n                    minLength: {value:2 , message:\"Minimum first name length is two characters!\"}\n                })}/>\n                <span><br/>{errors.firstName?.message}</span><br/>\n                <label>Last Name </label> <br/>          \n                <input type=\"text\" name=\"lastName\" placeholder=\"Smith\" ref={register({\n                    required: {value:true , message:\"Missing last name!\"},\n                    minLength: {value:2 , message:\"Minimum last name length is two characters!\"}\n                })}/>\n                <span><br/>{errors.lastName?.message}</span><br/>\n                <label>Email </label> <br/>\n                <input type=\"email\" name=\"email\" placeholder=\"example@example.com\" ref={register({\n                    required: {value:true , message:\"Missing email!\"}\n                })}/>\n                <span><br/>{errors.email?.message}</span><br/>\n                <label>Password </label> <br/>\n                <input type=\"password\" name=\"password\" placeholder=\"********\" ref={register({\n                     required: {value:true , message:\"Missing password!\"}\n                    })}/>\n                <span><br/>{errors.password?.message}</span><br/>\n                <Button color=\"info\" className=\"button\">Register</Button>{' '}\n            </form>\n        </div>\n    );\n}\n\nexport default Register;"]},"metadata":{},"sourceType":"module"}