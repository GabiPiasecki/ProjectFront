{"ast":null,"code":"import { Notyf } from \"notyf\";\n\nclass Notify {\n  constructor() {\n    this.notification = new Notyf({\n      duration: 2000,\n      position: {\n        x: \"center\",\n        y: \"bottom\"\n      }\n    });\n  }\n\n  success(message) {\n    this.notification.success(message);\n  }\n\n  error(message) {\n    this.notification.error(message);\n  }\n\n  extractMessage(err) {\n    var _err$response, _err$response2;\n\n    if (typeof err === \"string\") {\n      return err;\n    }\n\n    if (typeof (err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) === \"string\") {\n      return err.response.data[0];\n    }\n\n    if (Array.isArray(err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data)) {\n      return err.response.data[0];\n    } //must be last\n\n\n    if (typeof (err === null || err === void 0 ? void 0 : err.message) === \"string\") {\n      return err.message;\n    }\n\n    return \"Ohi Ohi Ohi\";\n  }\n\n}\n\nconst notify = new Notify();\nexport default notify;","map":{"version":3,"sources":["C:/Users/user/Desktop/Java Course/React/final/src/Services/Notify.ts"],"names":["Notyf","Notify","notification","duration","position","x","y","success","message","error","extractMessage","err","response","data","Array","isArray","notify"],"mappings":"AAAA,SAAQA,KAAR,QAAoB,OAApB;;AAEA,MAAMC,MAAN,CAAY;AAAA;AAAA,SACAC,YADA,GACe,IAAIF,KAAJ,CAAU;AAACG,MAAAA,QAAQ,EAAE,IAAX;AAAkBC,MAAAA,QAAQ,EAAC;AAACC,QAAAA,CAAC,EAAE,QAAJ;AAAcC,QAAAA,CAAC,EAAC;AAAhB;AAA3B,KAAV,CADf;AAAA;;AAGDC,EAAAA,OAAO,CAACC,OAAD,EAAgB;AAC1B,SAAKN,YAAL,CAAkBK,OAAlB,CAA0BC,OAA1B;AACH;;AAEMC,EAAAA,KAAK,CAACD,OAAD,EAAgB;AACxB,SAAKN,YAAL,CAAkBO,KAAlB,CAAwBD,OAAxB;AACH;;AAEOE,EAAAA,cAAc,CAACC,GAAD,EAAgB;AAAA;;AAClC,QAAI,OAAOA,GAAP,KAAe,QAAnB,EAA4B;AACxB,aAAOA,GAAP;AACH;;AACD,QAAI,QAAOA,GAAP,aAAOA,GAAP,wCAAOA,GAAG,CAAEC,QAAZ,kDAAO,cAAeC,IAAtB,MAA+B,QAAnC,EAA4C;AACxC,aAAOF,GAAG,CAACC,QAAJ,CAAaC,IAAb,CAAkB,CAAlB,CAAP;AACH;;AACD,QAAIC,KAAK,CAACC,OAAN,CAAcJ,GAAd,aAAcA,GAAd,yCAAcA,GAAG,CAAEC,QAAnB,mDAAc,eAAeC,IAA7B,CAAJ,EAAuC;AACnC,aAAOF,GAAG,CAACC,QAAJ,CAAaC,IAAb,CAAkB,CAAlB,CAAP;AACH,KATiC,CAUlC;;;AACA,QAAI,QAAOF,GAAP,aAAOA,GAAP,uBAAOA,GAAG,CAAEH,OAAZ,MAAwB,QAA5B,EAAqC;AACjC,aAAOG,GAAG,CAACH,OAAX;AACH;;AACD,WAAO,aAAP;AACH;;AA1BO;;AA6BZ,MAAMQ,MAAM,GAAG,IAAIf,MAAJ,EAAf;AAEA,eAAee,MAAf","sourcesContent":["import {Notyf} from \"notyf\";\r\n\r\nclass Notify{\r\n    private notification = new Notyf({duration: 2_000, position:{x: \"center\" ,y:\"bottom\"}});\r\n\r\n    public success(message:string){\r\n        this.notification.success(message)\r\n    }\r\n\r\n    public error(message:string){\r\n        this.notification.error(message)\r\n    }\r\n\r\n    private extractMessage(err:any):string{\r\n        if (typeof err === \"string\"){\r\n            return err;\r\n        }\r\n        if (typeof err?.response?.data === \"string\"){\r\n            return err.response.data[0];\r\n        }\r\n        if (Array.isArray(err?.response?.data)){\r\n            return err.response.data[0];\r\n        }\r\n        //must be last\r\n        if (typeof err?.message === \"string\"){\r\n            return err.message;\r\n        }\r\n        return \"Ohi Ohi Ohi\";\r\n    }\r\n}\r\n\r\nconst notify = new Notify();\r\n\r\nexport default notify;"]},"metadata":{},"sourceType":"module"}