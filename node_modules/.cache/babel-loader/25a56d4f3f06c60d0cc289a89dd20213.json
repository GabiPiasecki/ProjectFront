{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Java Course\\\\React\\\\final\\\\src\\\\ModelTemplates\\\\CouponForPurchase\\\\CouponForPurchase.tsx\";\nimport \"./CouponForPurchase.css\";\nimport jwtAxios from \"../../Authorization/jwtAxios\";\nimport notify from \"../../Services/Notify\";\nimport store from \"../../Redux/Store\";\nimport { couponUpdateAction } from \"../../Redux/CouponState\";\nimport { customerUpdateAction } from \"../../Redux/CustomerState\";\nimport { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport coupon from \"../../Assets/comp.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CouponForPurchase extends Component {\n  constructor(props) {\n    super(props);\n\n    this.purchaseCoupon = async coupon => {\n      try {\n        const response = await jwtAxios.post(\"http://localhost:8080/customer/purchase\", coupon);\n        coupon.amount = coupon.amount - 1;\n        store.dispatch(couponUpdateAction(coupon));\n        const customerEmail = store.getState().authState.user.email;\n        const loggedCustomerArray = store.getState().customerState.customers.filter(function (item) {\n          return item.email === customerEmail;\n        });\n        const loggedCustomer = loggedCustomerArray[0];\n        loggedCustomer.coupons.push(coupon);\n        store.dispatch(customerUpdateAction(loggedCustomer));\n        this.setState({\n          route: \"/customer/all\"\n        });\n        notify.success(\"Coupon purchase was successful!\");\n      } catch {\n        notify.error(\"There was a problem with purchase!\");\n      }\n    };\n\n    this.loginRoute = () => {\n      this.setState({\n        route: \"/login\"\n      });\n    };\n\n    this.state = {\n      userLogged: store.getState().authState.isLogged,\n      route: this.props.currentURL\n    };\n    store.subscribe(() => {\n      this.setState({\n        userLogged: store.getState().authState.isLogged\n      });\n    });\n  }\n\n  render() {\n    if (this.state.userLogged) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CouponForPurchase\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"column\",\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardImg, {\n            top: true,\n            width: \"100%\",\n            src: coupon,\n            alt: \"Card image cap\",\n            className: \"CardImg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              tag: \"h5\",\n              children: this.props.coupon.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n              tag: \"h6\",\n              className: \"mb-2 text-muted\",\n              children: [this.props.coupon.price, \"\\u20AA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: this.props.coupon.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.purchaseCoupon(this.props.coupon),\n              children: [\"Add to cart\", /*#__PURE__*/_jsxDEV(Redirect, {\n                to: this.state.route\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CouponForPurchase\",\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"column\",\n          style: {\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(CardImg, {\n            top: true,\n            width: \"100%\",\n            src: coupon,\n            alt: \"Card image cap\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n            children: [/*#__PURE__*/_jsxDEV(CardTitle, {\n              tag: \"h5\",\n              children: this.props.coupon.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardSubtitle, {\n              tag: \"h6\",\n              className: \"mb-2 text-muted\",\n              children: [this.props.coupon.price, \"\\u20AA\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CardText, {\n              children: this.props.coupon.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => this.loginRoute(),\n              children: [\"Add to cart\", /*#__PURE__*/_jsxDEV(Redirect, {\n                to: this.state.route\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nexport default CouponForPurchase; // function CouponForPurchase(props: CouponForPurchaseProps): JSX.Element {\n//      const history=useHistory();\n//      const purchaseCoupon =async (coupon:Coupon) => {\n//         try{\n//             const response = await jwtAxios.post<Coupon>(\"http://localhost:8080/customer/purchase\",coupon);\n//             coupon.amount=coupon.amount-1;\n//             store.dispatch(couponUpdateAction(coupon));\n//             const customerEmail = store.getState().authState.user.email;\n//             const loggedCustomerArray=store.getState().customerState.customers.filter(function(item){return item.email==customerEmail});\n//             const loggedCustomer = loggedCustomerArray[0];\n//             loggedCustomer.coupons.push(coupon);\n//             store.dispatch(customerUpdateAction(loggedCustomer));\n//             history.push(\"/customer/all\");\n//             notify.success(\"purchase was successful!\");\n//         } catch {\n//             notify.error(\"There was a problem with purchase!\");\n//         }\n//     }\n//     return (\n//         <div className=\"CouponForPurchase\">\n// \t\t\t<div className=\"couponCard column\">\n//                 <img src={couponImage} alt=\"Coupon Image\" />\n//                 <h1>{props.coupon.title}</h1>\n//                 <p className=\"couponPrice\">{props.coupon.price}</p>\n//                 <p>{props.coupon.description} </p>\n//                 <button onClick={() => purchaseCoupon(props.coupon)}>Add to cart</button>\n//                 </div>\n//         </div>\n//     );\n// }\n// export default CouponForPurchase;","map":{"version":3,"sources":["C:/Users/user/Desktop/Java Course/React/final/src/ModelTemplates/CouponForPurchase/CouponForPurchase.tsx"],"names":["jwtAxios","notify","store","couponUpdateAction","customerUpdateAction","Component","Redirect","Card","CardImg","CardText","CardBody","CardTitle","CardSubtitle","Button","coupon","CouponForPurchase","constructor","props","purchaseCoupon","response","post","amount","dispatch","customerEmail","getState","authState","user","email","loggedCustomerArray","customerState","customers","filter","item","loggedCustomer","coupons","push","setState","route","success","error","loginRoute","state","userLogged","isLogged","currentURL","subscribe","render","flex","title","price","description"],"mappings":"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","sourcesContent":["import \"./CouponForPurchase.css\";\nimport Coupon from \"../../Models/Coupon\";\nimport jwtAxios from \"../../Authorization/jwtAxios\";\nimport notify from \"../../Services/Notify\";\nimport store from \"../../Redux/Store\";\nimport { couponUpdateAction } from \"../../Redux/CouponState\";\nimport { customerUpdateAction } from \"../../Redux/CustomerState\";\nimport { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle, Button } from 'reactstrap';\nimport coupon from \"../../Assets/comp.jpg\";\n\ninterface CouponForPurchaseState {\n    userLogged : boolean;\n    route: string;\n}\n \ninterface CouponForPurchaseProps {\n\tcoupon : Coupon;\n    currentURL : string;\n}\n\nclass CouponForPurchase extends Component<CouponForPurchaseProps, CouponForPurchaseState> {\n    public constructor(props: CouponForPurchaseProps) {\n        super(props);\n        this.state = {\n            userLogged: store.getState().authState.isLogged,\n            route: this.props.currentURL\n        };\n        store.subscribe(() => {\n            this.setState({\n                userLogged: store.getState().authState.isLogged\n            });\n        })\n    }\n\n    public purchaseCoupon = async (coupon:Coupon) => {\n        try{\n            const response = await jwtAxios.post<Coupon>(\"http://localhost:8080/customer/purchase\",coupon);\n            coupon.amount=coupon.amount-1;\n            store.dispatch(couponUpdateAction(coupon));\n            const customerEmail = store.getState().authState.user.email;\n            const loggedCustomerArray=store.getState().customerState.customers.filter(function(item){return item.email === customerEmail});\n            const loggedCustomer = loggedCustomerArray[0];\n            loggedCustomer.coupons.push(coupon);\n            store.dispatch(customerUpdateAction(loggedCustomer));\n            this.setState({\n                route: \"/customer/all\"\n            })\n            notify.success(\"Coupon purchase was successful!\");\n        } catch {\n            notify.error(\"There was a problem with purchase!\");\n        }\n    }\n\n    private loginRoute = () => {\n        this.setState({\n            route: \"/login\"\n        })\n    }\n\n    public render(): JSX.Element {\n        if (this.state.userLogged){\n            return (\n                <div className=\"CouponForPurchase\">\n                    <Card className=\"column\" style={{flex: 1}}>\n                        <CardImg top width=\"100%\" src={coupon} alt=\"Card image cap\" className=\"CardImg\" />\n                        <CardBody>\n                            <CardTitle tag=\"h5\">{this.props.coupon.title}</CardTitle>\n                            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{this.props.coupon.price}₪</CardSubtitle>\n                            <CardText>{this.props.coupon.description}</CardText>\n                            <Button onClick={() => this.purchaseCoupon(this.props.coupon)}>Add to cart\n                                <Redirect to={this.state.route} />\n                            </Button>\n                        </CardBody>\n                    </Card>\n                </div>\n            );\n        } else{\n            return (\n                <div className=\"CouponForPurchase\">\n                    <Card className=\"column\" style={{flex: 1}}>\n                        <CardImg top width=\"100%\" src={coupon} alt=\"Card image cap\" />\n                        <CardBody>\n                            <CardTitle tag=\"h5\">{this.props.coupon.title}</CardTitle>\n                            <CardSubtitle tag=\"h6\" className=\"mb-2 text-muted\">{this.props.coupon.price}₪</CardSubtitle>\n                            <CardText>{this.props.coupon.description}</CardText>\n                            <Button onClick={() => this.loginRoute()}>Add to cart\n                                <Redirect to={this.state.route} />\n                            </Button>\n                        </CardBody>\n                    </Card>\n                </div>\n            );\n         }\n    }\n}\n \nexport default CouponForPurchase;\n\n\n\n// function CouponForPurchase(props: CouponForPurchaseProps): JSX.Element {\n//      const history=useHistory();\n//      const purchaseCoupon =async (coupon:Coupon) => {\n//         try{\n//             const response = await jwtAxios.post<Coupon>(\"http://localhost:8080/customer/purchase\",coupon);\n//             coupon.amount=coupon.amount-1;\n//             store.dispatch(couponUpdateAction(coupon));\n//             const customerEmail = store.getState().authState.user.email;\n//             const loggedCustomerArray=store.getState().customerState.customers.filter(function(item){return item.email==customerEmail});\n//             const loggedCustomer = loggedCustomerArray[0];\n//             loggedCustomer.coupons.push(coupon);\n//             store.dispatch(customerUpdateAction(loggedCustomer));\n//             history.push(\"/customer/all\");\n//             notify.success(\"purchase was successful!\");\n//         } catch {\n//             notify.error(\"There was a problem with purchase!\");\n//         }\n//     }\n\n//     return (\n//         <div className=\"CouponForPurchase\">\n// \t\t\t<div className=\"couponCard column\">\n//                 <img src={couponImage} alt=\"Coupon Image\" />\n//                 <h1>{props.coupon.title}</h1>\n//                 <p className=\"couponPrice\">{props.coupon.price}</p>\n//                 <p>{props.coupon.description} </p>\n//                 <button onClick={() => purchaseCoupon(props.coupon)}>Add to cart</button>\n//                 </div>\n//         </div>\n//     );\n// }\n\n// export default CouponForPurchase;"]},"metadata":{},"sourceType":"module"}